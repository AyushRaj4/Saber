openapi: 3.0.0
info:
  title: Auth Service API
  version: 1.0.0
  description: API for user authentication (signup, login) in University LinkedIn MVP.

servers:
  - url: http://localhost:4000
    description: Local development server (Auth Service)

tags:
  - name: Authentication
    description: Endpoints related to user authentication (signup, login)

paths:
  /signup:
    post:
      tags:
        - Authentication
      summary: User signup
      description: Create a new user account with email and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: StrongPassword123
              required:
                - email
                - password
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 64af1e8b9a
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        "400":
          description: Invalid input (e.g., email already exists)

  /login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate a user with email and password and return JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: StrongPassword123
              required:
                - email
                - password
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        "401":
          description: Unauthorized (invalid credentials)
